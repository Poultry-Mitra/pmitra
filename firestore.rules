
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/roles_admin/$(request.auth.uid));
    }

    // AUTH: Anyone can create their own user profile upon signup
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      // Allow admins to list/read all users
      allow list: if isAdmin();
    }

    // AUTH: Allow admin creation only for the designated admin email
    match /roles_admin/{userId} {
      allow read, write: if request.auth.uid == userId && request.auth.token.email == 'ipoultrymitra@gmail.com';
      allow list, delete: if isAdmin();
    }

    // BATCHES: Farmers can manage their own batches
    match /batches/{batchId} {
      allow read, write: if request.auth.uid == resource.data.farmerUID || isAdmin();
      allow create: if request.auth.uid == request.resource.data.farmerUID || isAdmin();
      allow list: if isAdmin();
    }

    match /batches/{batchId}/dailyRecords/{recordId} {
      allow read, list, create, update, delete: if get(/databases/$(database)/documents/batches/$(batchId)).data.farmerUID == request.auth.uid || isAdmin();
    }

    // INVENTORY: Farmers can manage their own inventory
    match /inventory/{itemId} {
       allow read, write: if request.auth.uid == resource.data.farmerUID || isAdmin();
       allow create: if request.auth.uid == request.resource.data.farmerUID || isAdmin();
       allow list: if isAdmin();
    }
    
    // DEALER INVENTORY: Dealers manage their own inventory
    match /dealerInventory/{itemId} {
       allow read, write: if request.auth.uid == resource.data.dealerUID || isAdmin();
       allow create: if request.auth.uid == request.resource.data.dealerUID || isAdmin();
       allow list: if isAdmin();
    }

    // CONNECTIONS: Users can manage their own connection requests
    match /connections/{connectionId} {
        allow read, create: if request.auth.uid == request.resource.data.farmerUID || request.auth.uid == request.resource.data.dealerUID;
        allow update: if (
            (request.auth.uid == resource.data.farmerUID && resource.data.requestedBy == 'dealer') ||
            (request.auth.uid == resource.data.dealerUID && resource.data.requestedBy == 'farmer') ||
            isAdmin()
        );
        allow list, delete: if isAdmin();
    }
    
    // ORDERS: Farmers/Dealers can manage orders they are part of
    match /orders/{orderId} {
        allow read, create: if request.auth.uid == request.resource.data.farmerUID || request.auth.uid == request.resource.data.dealerUID;
        // Allow farmer to update status if they were the recipient of the order request
        allow update: if request.auth.uid == resource.data.farmerUID || request.auth.uid == resource.data.dealerUID;
        allow list, delete: if isAdmin();
    }

    // LEDGER: Users can only manage their own ledger.
    match /ledger/{entryId} {
        allow read, create: if request.auth.uid == request.resource.data.userId;
        allow list, update, delete: if get(/databases/$(database)/documents/ledger/$(entryId)).data.userId == request.auth.uid || isAdmin();
    }
    
    // DAILY RATES: Only admins can write, all users can read.
    match /dailyRates/{rateId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // AUDIT LOGS: Only admins can write/read
    match /audit_logs/{logId} {
      allow read, write: if isAdmin();
    }

  }
}
